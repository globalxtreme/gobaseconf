// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: LGLog.proto

package log

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Type            string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Service         string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Message         string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Stack           []byte                 `protobuf:"bytes,4,opt,name=stack,proto3" json:"stack,omitempty"`
	DateTime        string                 `protobuf:"bytes,5,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Bug             bool                   `protobuf:"varint,6,opt,name=bug,proto3" json:"bug,omitempty"`
	Payload         []byte                 `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	PerformedBy     string                 `protobuf:"bytes,8,opt,name=performedBy,proto3" json:"performedBy,omitempty"`
	PerformedByName string                 `protobuf:"bytes,9,opt,name=performedByName,proto3" json:"performedByName,omitempty"`
	PerformedByType string                 `protobuf:"bytes,10,opt,name=performedByType,proto3" json:"performedByType,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_LGLog_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LGLog_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_LGLog_proto_rawDescGZIP(), []int{0}
}

func (x *LogRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogRequest) GetStack() []byte {
	if x != nil {
		return x.Stack
	}
	return nil
}

func (x *LogRequest) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

func (x *LogRequest) GetBug() bool {
	if x != nil {
		return x.Bug
	}
	return false
}

func (x *LogRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *LogRequest) GetPerformedBy() string {
	if x != nil {
		return x.PerformedBy
	}
	return ""
}

func (x *LogRequest) GetPerformedByName() string {
	if x != nil {
		return x.PerformedByName
	}
	return ""
}

func (x *LogRequest) GetPerformedByType() string {
	if x != nil {
		return x.PerformedByType
	}
	return ""
}

var File_LGLog_proto protoreflect.FileDescriptor

var file_LGLog_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x4c, 0x47, 0x4c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6c,
	0x6f, 0x67, 0x1a, 0x10, 0x4c, 0x47, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x02, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x62, 0x75, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x64, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x32,
	0x37, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x03, 0x4c, 0x6f, 0x67, 0x12, 0x0f, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x47, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_LGLog_proto_rawDescOnce sync.Once
	file_LGLog_proto_rawDescData []byte
)

func file_LGLog_proto_rawDescGZIP() []byte {
	file_LGLog_proto_rawDescOnce.Do(func() {
		file_LGLog_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_LGLog_proto_rawDesc), len(file_LGLog_proto_rawDesc)))
	})
	return file_LGLog_proto_rawDescData
}

var file_LGLog_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_LGLog_proto_goTypes = []any{
	(*LogRequest)(nil), // 0: log.LogRequest
	(*LGResponse)(nil), // 1: log.LGResponse
}
var file_LGLog_proto_depIdxs = []int32{
	0, // 0: log.LogService.Log:input_type -> log.LogRequest
	1, // 1: log.LogService.Log:output_type -> log.LGResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_LGLog_proto_init() }
func file_LGLog_proto_init() {
	if File_LGLog_proto != nil {
		return
	}
	file_LGResponse_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_LGLog_proto_rawDesc), len(file_LGLog_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_LGLog_proto_goTypes,
		DependencyIndexes: file_LGLog_proto_depIdxs,
		MessageInfos:      file_LGLog_proto_msgTypes,
	}.Build()
	File_LGLog_proto = out.File
	file_LGLog_proto_goTypes = nil
	file_LGLog_proto_depIdxs = nil
}
